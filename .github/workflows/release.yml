# This is a basic workflow to help you get started with Actions

name: 'Build and Release'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [assigned, opened, synchronize, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: echo-default-env-variables
        run: |
            echo "Home: ${HOME}"
            echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
            echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
            echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
            echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
            echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
            echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
            echo "GITHUB_SHA: ${GITHUB_SHA}"
            echo "GITHUB_REF: ${GITHUB_REF}"

      - name: Setup GitVersion
        uses: GitTools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.x'

      - name: Determine GitVersion
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v0.9.10
        with:
          useConfigFile: true


      - name: Display GitVersion outputs
        run: |
          echo "Major: ${GITVERSION_major}"
          echo "Minor: ${GITVERSION_minor}"
          echo "Patch: ${GITVERSION_patch}"
          echo "PreReleaseTag: ${GITVERSION_preReleaseTag}"
          echo "PreReleaseTagWithDash: ${GITVERSION_preReleaseTagWithDash}"
          echo "PreReleaseLabel: ${GITVERSION_preReleaseLabel}"
          echo "PreReleaseNumber: ${GITVERSION_preReleaseNumber}"
          echo "WeightedPreReleaseNumber: ${GITVERSION_weightedPreReleaseNumber}"
          echo "BuildMetaData: ${GITVERSION_buildMetaData}"
          echo "BuildMetaDataPadded: ${GITVERSION_buildMetaDataPadded}"
          echo "FullBuildMetaData: ${GITVERSION_fullBuildMetaData}"
          echo "MajorMinorPatch: ${GITVERSION_majorMinorPatch}"
          echo "SemVer: ${GITVERSION_semVer}"
          echo "LegacySemVer: ${GITVERSION_legacySemVer}"
          echo "LegacySemVerPadded: ${GITVERSION_legacySemVerPadded}"
          echo "AssemblySemVer: ${GITVERSION_assemblySemVer}"
          echo "AssemblySemFileVer: ${GITVERSION_assemblySemFileVer}"
          echo "FullSemVer: ${GITVERSION_fullSemVer}"
          echo "InformationalVersion: ${GITVERSION_informationalVersion}"
          echo "BranchName: ${GITVERSION_branchName}"
          echo "EscapedBranchName: ${GITVERSION_escapedBranchName}"
          echo "Sha: ${GITVERSION_sha}"
          echo "ShortSha: ${GITVERSION_shortSha}"
          echo "NuGetVersionV2: ${GITVERSION_nuGetVersionV2}"
          echo "NuGetVersion: ${GITVERSION_nuGetVersion}"
          echo "NuGetPreReleaseTagV2: ${GITVERSION_nuGetPreReleaseTagV2}"
          echo "NuGetPreReleaseTag: ${GITVERSION_nuGetPreReleaseTag}"
          echo "VersionSourceSha: ${GITVERSION_versionSourceSha}"
          echo "CommitsSinceVersionSource: ${GITVERSION_commitsSinceVersionSource}"
          echo "CommitsSinceVersionSourcePadded: ${GITVERSION_commitsSinceVersionSourcePadded}"
          echo "UncommittedChanges: ${GITVERSION_uncommittedChanges}"
          echo "CommitDate: ${GITVERSION_commitDate}"
